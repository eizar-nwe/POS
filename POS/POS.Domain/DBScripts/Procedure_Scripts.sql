DROP PROCEDURE Pro_SALE_ORDER_DETL
GO
CREATE PROCEDURE Pro_SALE_ORDER_DETL
	@RETVAL			INT OUTPUT,
	@CMD			CHAR(1),
	@ID				CHAR(36),	
	@LINE_ID		INT,

	@STOCKGRP_ID	CHAR(36),
	@STOCKITEM_ID	CHAR(36),		
	@QUANTITY		NUMERIC(18,2),

	@REMARKS		NVARCHAR(255),
	@CREATEDBY		CHAR(36)	
AS
BEGIN
BEGIN TRY
	Declare 	
	@IsMEMBER			CHAR(1),
	@MEMBER_ID			CHAR(36),

	@SELL_PRICE			NUMERIC(18,2),
	@MEM_DISC_PRICE		NUMERIC(18,2),
	@ITEM_DISC_PRICE	NUMERIC(18,2),
	@OFFER_PRICE		NUMERIC(18,2),

	@DISC_TYPE			NVARCHAR(5),
	@DISC_AMT			NUMERIC(18,2),	
	@TOT_DISC_AMT		NUMERIC(18,2),
	@TOT_AMT			NUMERIC(18,2),
	@NET_AMT			NUMERIC(18,2),	
	@IP					NVARCHAR(MAX)

	SET @RETVAL=0;	
	SET @SELL_PRICE=0;
	SET @MEM_DISC_PRICE=0;
	SET @ITEM_DISC_PRICE=0;
	SET @OFFER_PRICE = 0;
	SET @DISC_AMT=0;
	SET @TOT_DISC_AMT =0;
	SET @TOT_AMT = 0;
	SET @NET_AMT =0;	
	set @DISC_AMT =0;

	IF (@CMD = 'I') -- ADD NEW ITEM
	BEGIN
		SET @LINE_ID = (SELECT LINE_ID FROM SALE_ORDER_DETL WHERE ID=@ID AND STOCKGRP_ID = @STOCKGRP_ID AND STOCKITEM_ID = @STOCKITEM_ID)

		IF (@LINE_ID <> NULL OR @LINE_ID <> '')
		BEGIN 
			SET @CMD='U';
		END
	END

	IF (@CMD = 'I') -- ADD NEW ITEM
	BEGIN
		SET @LINE_ID = (SELECT ISNULL(MAX(LINE_ID),0) + 10 FROM SALE_ORDER_DETL WHERE ID=@ID);

		SELECT @MEMBER_ID=isnull(MEMBER_ID,''),@IP=IP  FROM SALE_ORDER_HDR WHERE ID=@ID;	

		IF (@MEMBER_ID <> '')
		BEGIN		
			SELECT @MEM_DISC_PRICE=ISNULL(OFFER_PRICE ,0)
			FROM MEMBER_DISCOUNT 
			WHERE MEMBER_ID=@MEMBER_ID AND STOCKGRP_ID=@STOCKGRP_ID AND STOCKITEM_ID=@STOCKITEM_ID AND ISACTIVE ='1';
		END	

		SELECT @SELL_PRICE=ISNULL(SELL_PRICE,0),@ITEM_DISC_PRICE=ISNULL(OFFER_PRICE,0) 
		FROM STOCKITEM  
		WHERE ID=@STOCKITEM_ID AND STOCKGRP_ID=@STOCKGRP_ID AND ISACTIVE ='1';

		SET @TOT_AMT = @SELL_PRICE * @QUANTITY;

		IF (@MEM_DISC_PRICE > @ITEM_DISC_PRICE)
		BEGIN
			SET @OFFER_PRICE = @MEM_DISC_PRICE;
			SET @DISC_TYPE = 'MEM';
			SET @DISC_AMT = @SELL_PRICE - @OFFER_PRICE;
			SET @TOT_DISC_AMT = @TOT_AMT - (@OFFER_PRICE * @QUANTITY);	
		END
		ELSE IF (@ITEM_DISC_PRICE > @MEM_DISC_PRICE)
		BEGIN
			SET @OFFER_PRICE = @ITEM_DISC_PRICE;
			SET @DISC_TYPE = 'ITEM';
			SET @DISC_AMT = @SELL_PRICE - @OFFER_PRICE;
			SET @TOT_DISC_AMT = @TOT_AMT - (@OFFER_PRICE * @QUANTITY);	
		END

		SET @NET_AMT = @TOT_AMT - @TOT_DISC_AMT;

		INSERT INTO SALE_ORDER_DETL(ID,LINE_ID,STOCKGRP_ID,STOCKITEM_ID,PRICE,QUANTITY,DISC_TYPE,DISC_AMOUNT,TOT_DISC_AMT,TOT_AMT,NET_AMT,
		REMARKS,CREATEDAT,CREATEDBY,IP,ISACTIVE)
		VALUES(@ID,@LINE_ID,@STOCKGRP_ID,@STOCKITEM_ID,@SELL_PRICE,@QUANTITY,@DISC_TYPE,@DISC_AMT,@TOT_DISC_AMT,@TOT_AMT,@NET_AMT,
		@REMARKS,GetDate(),@CREATEDBY,@IP,'1')

	END
	ELSE IF (@CMD = 'U') -- ADD NEW ITEM-- ADD EXISTING ITEM
	BEGIN
		UPDATE SALE_ORDER_DETL SET 
		QUANTITY= QUANTITY + @QUANTITY, 
		TOT_DISC_AMT= DISC_AMOUNT * (QUANTITY + @QUANTITY), 
		TOT_AMT= PRICE * (QUANTITY + @QUANTITY), 
		NET_AMT= (PRICE * (QUANTITY + @QUANTITY)) - (DISC_AMOUNT * (QUANTITY + @QUANTITY))
		WHERE ID=@ID AND LINE_ID=@LINE_ID AND STOCKGRP_ID = @STOCKGRP_ID AND STOCKITEM_ID = @STOCKITEM_ID
	END
	ELSE IF (@CMD = 'R') -- MINUS ITEM QTY
	BEGIN
		IF ((SELECT QUANTITY FROM SALE_ORDER_DETL WHERE ID=@ID AND LINE_ID=@LINE_ID AND STOCKGRP_ID = @STOCKGRP_ID AND STOCKITEM_ID = @STOCKITEM_ID) = 1)
		BEGIN
			DELETE FROM SALE_ORDER_DETL WHERE ID=@ID AND LINE_ID=@LINE_ID AND STOCKGRP_ID = @STOCKGRP_ID AND STOCKITEM_ID = @STOCKITEM_ID
			
			IF (ISNULL((SELECT 1 FROM SALE_ORDER_DETL WHERE ID=@ID),0) <> 1)
			BEGIN 
				DELETE FROM SALE_ORDER_HDR WHERE ID=@ID 
			END
		END
		ELSE BEGIN
			UPDATE SALE_ORDER_DETL SET 
			QUANTITY= QUANTITY - @QUANTITY, 
			TOT_DISC_AMT= DISC_AMOUNT * (QUANTITY - @QUANTITY), 
			TOT_AMT= PRICE * (QUANTITY - @QUANTITY), 
			NET_AMT= (PRICE * (QUANTITY - @QUANTITY)) - (DISC_AMOUNT * (QUANTITY - @QUANTITY))
			WHERE ID=@ID AND LINE_ID=@LINE_ID AND STOCKGRP_ID = @STOCKGRP_ID AND STOCKITEM_ID = @STOCKITEM_ID
		END
	END

END TRY
BEGIN CATCH
	PRINT 'Error Message: ' + ERROR_MESSAGE()
	SET @RETVAL = 1;
END CATCH
END;

GO

DROP PROCEDURE Pro_Add_Payment
GO
CREATE PROCEDURE Pro_Add_Payment
	@RETVAL			INT OUTPUT,	
	@ID				CHAR(36),	
	@PAY_METHOD		NVARCHAR(10),

	@SUB_TOT		NUMERIC(18,2),
	@TOT_DISC		NUMERIC(18,2),		
	@TOT_AMT		NUMERIC(18,2),

	@CARD_NUM		NVARCHAR(255),
	@CREATEDBY		CHAR(36),
	@ORDR_TYPE		NVARCHAR(10)
AS
BEGIN
BEGIN TRY
	Declare 
	@IP	NVARCHAR(MAX),
	@LINE_ID		INT

	SET @RETVAL=0;		
	SET @LINE_ID = 0;
	SET @IP = (SELECT IP FROM SALE_ORDER_HDR WHERE ID=@ID)

	UPDATE SALE_ORDER_HDR SET 
	TOT_DISC_AMT=@TOT_DISC, TOT_AMT=@SUB_TOT, NET_AMT=@TOT_AMT,
	ORDR_TYPE=@ORDR_TYPE, CREATEDAT=GetDate() , ISACTIVE ='1'
	WHERE ID=@ID

	INSERT INTO PAYMENT(ID,LINE_ID,PAY_METHOD,TOT_AMT,CARD_NUM,REMARKS,CREATEDAT,CREATEDBY,IP,ISACTIVE)
	VALUES(@ID,@LINE_ID,@PAY_METHOD,@TOT_AMT,@CARD_NUM,NULL,GetDate(),@CREATEDBY,@IP,'1')

END TRY
BEGIN CATCH
	PRINT 'Error Message: ' + ERROR_MESSAGE()
	SET @RETVAL = 1;
END CATCH
END;

